name: CI

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '**.md'
      - 'Documents/**'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - '**.md'
      - 'Documents/**'
  workflow_dispatch:

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate Docker Compose file
        run: docker-compose config

      - name: Create secrets directory and files
        run: |
          mkdir -p secrets
          echo -n "nextcloud" > secrets/mysql_root_password.txt
          echo -n "nextcloud" > secrets/mysql_password.txt
          echo -n "nextcloud" > secrets/redis_password.txt
          echo -n "admin" > secrets/nextcloud_admin_user.txt
          echo -n "admin" > secrets/nextcloud_admin_password.txt
          chmod 600 secrets/*.txt

      - name: Verify scripts are executable
        run: |
          chmod +x .devcontainer/setup.sh
          chmod +x fix-app-symlink.sh
          chmod +x cleanup-repository.sh

  lint:
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/shellcheck
          key: ${{ runner.os }}-shellcheck-${{ hashFiles('**/*.sh') }}
          restore-keys: |
            ${{ runner.os }}-shellcheck-

      - name: Lint shell scripts
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck
          find . -type f -name "*.sh" -exec shellcheck {} \;

      - name: Lint Markdown files
        uses: DavidAnson/markdownlint-cli2-action@v13
        with:
          globs: "**/*.md"
          config: |
            {
              "MD013": false,
              "MD033": false
            }

  docker-test:
    runs-on: ubuntu-latest
    needs: [validate, lint]
    services:
      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3
      
      mariadb:
        image: mariadb:10.6
        env:
          MYSQL_ROOT_PASSWORD: nextcloud
          MYSQL_PASSWORD: nextcloud
          MYSQL_DATABASE: nextcloud
          MYSQL_USER: nextcloud
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create secrets directory and files
        run: |
          mkdir -p secrets
          echo -n "nextcloud" > secrets/mysql_root_password.txt
          echo -n "nextcloud" > secrets/mysql_password.txt
          echo -n "nextcloud" > secrets/redis_password.txt
          echo -n "admin" > secrets/nextcloud_admin_user.txt
          echo -n "admin" > secrets/nextcloud_admin_password.txt
          chmod 600 secrets/*.txt

      - name: Check database connection
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-client
          mysql -h 127.0.0.1 -P 3306 -u nextcloud -pnextcloud -e "SHOW DATABASES;"

      - name: Check Redis connection
        run: |
          sudo apt-get install -y redis-tools
          redis-cli -h 127.0.0.1 -p 6379 ping

  matrix-test:
    runs-on: ubuntu-latest
    needs: validate
    strategy:
      matrix:
        php-version: [7.4, 8.0, 8.1]
        nextcloud-version: [24, 25, 26]
        exclude:
          # Exclude incompatible combinations
          - php-version: 7.4
            nextcloud-version: 26

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, intl, gd, xml, zip, curl

      - name: Check PHP version
        run: php -v

      - name: Verify Nextcloud compatibility
        run: |
          echo "Testing compatibility with PHP ${{ matrix.php-version }} and Nextcloud ${{ matrix.nextcloud-version }}"
          # This is a placeholder for actual compatibility checks
          # In a real scenario, you might download the Nextcloud version and run tests
          exit 0
