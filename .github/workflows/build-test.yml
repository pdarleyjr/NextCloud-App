name: Build and Test

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '**.md'
      - 'Documents/**'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - '**.md'
      - 'Documents/**'
  workflow_dispatch:

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions: ['8.1']
        nextcloud-versions: ['26', '27']

    services:
      mysql:
        image: mariadb:10.6
        env:
          MYSQL_ROOT_PASSWORD: nextcloud
          MYSQL_PASSWORD: nextcloud
          MYSQL_DATABASE: nextcloud_test
          MYSQL_USER: nextcloud
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP ${{ matrix.php-versions }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, intl, gd, xml, zip, curl, pdo, mysql, sqlite, pdo_sqlite, bcmath, gmp
          coverage: xdebug
          tools: composer:v2, phpunit

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Check code style
        run: composer run-script lint
        continue-on-error: true

      - name: Run unit tests
        run: composer run-script test
        env:
          XDEBUG_MODE: coverage

      - name: Generate code coverage report
        run: |
          mkdir -p coverage
          vendor/bin/phpunit --coverage-clover coverage/clover.xml --coverage-html coverage/html
        continue-on-error: true

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: coverage/
        continue-on-error: true

  docker-build:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          push: false
          tags: nextcloud-app:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=docker,dest=/tmp/nextcloud-app-image.tar

      - name: Upload Docker image as artifact
        uses: actions/upload-artifact@v3
        with:
          name: nextcloud-app-image
          path: /tmp/nextcloud-app-image.tar
